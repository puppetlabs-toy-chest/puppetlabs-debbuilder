set -e
BUILDRESULTUID=$SUDO_UID
ALLOWUNTRUSTED=yes
USEDEVSHM=no
# Codenames for Debian suites according to their alias. Update these when
# needed.
UNSTABLE_CODENAME="sid"
TESTING_CODENAME="stretch"
STABLE_CODENAME="jessie"
STABLE_BACKPORTS_SUITE="$STABLE_CODENAME-backports"
OLD_STABLE_CODENAME="wheezy"
OLD_STABLE_BACKPORTS_SUITE="$OLD_STABLE_CODENAME-backports"
CUMULUS_SUITES="CumulusLinux-2.2"
CUMULUS_MIRROR="osmirror.delivery.puppetlabs.net"
CUMULUS_COMPONENTS="main addons security-updates testing updates"

# Add a HOOKDIR to find the D10-man-db hook
HOOKDIR=/usr/share/pbuilder/hooks

# List of Debian suites.
<% if @debian_suites %>
DEBIAN_SUITES=(<%= @debian_suites %>)
<% else %>
DEBIAN_SUITES=("squeeze" $UNSTABLE_CODENAME $TESTING_CODENAME $STABLE_CODENAME $OLD_STABLE_CODENAME "unstable" "testing" "stable")
<% end %>

<% if @ubuntu_suites %>
UBUNTU_SUITES=(<%= @ubuntu_suites %>)
<% else %>
# List of Ubuntu suites. Update these when needed.
UBUNTU_SUITES=("lucid" "precise" "trusty" "utopic" "vivid", "wily", "xenial")
<% end %>

# Mirrors to use. Update these to your preferred mirror.
<% if @debian_mirror %>
DEBIAN_MIRROR="<%= @debian_mirror %>"
<% else %>
DEBIAN_MIRROR="ftp.us.debian.org"
<% end %>

<% if @debian_archive_mirror %>
DEBIAN_ARCHIVE_MIRROR="<%= @debian_archive_mirror %>"
<% else %>
DEBIAN_ARCHIVE_MIRROR="archive.debian.org"
<% end %>

<% if @ubuntu_mirror %>
UBUNTU_MIRROR="<%= @ubuntu_mirror %>"
<% else %>
UBUNTU_MIRROR="us.archive.ubuntu.com"
<% end %>

# List of old debian/ubuntu suites that require the traditional apt mirror
OLD_SUITES=("lucid" "precise" "squeeze" "stable" "testing" "trusty" "wheezy")

# List of ubuntu/debian suites that are archived
DEBIAN_ARCHIVE_SUITES=("squeeze")

# Optionally use the changelog of a package to determine the suite to use if
# none set.
if [ -z "${DIST}" ] && [ -r "debian/changelog" ]; then
    DIST=$(dpkg-parsechangelog | awk '/^Distribution: / {print $2}')
    # Use the unstable suite for certain suite values.
    if $(echo "experimental UNRELEASED" | grep -q $DIST); then
        DIST="$UNSTABLE_CODENAME"
    fi
fi

# Optionally set a default distribution if none is used. Note that you can set
# your own default (i.e. ${DIST:="unstable"}).
: ${DIST:="$(lsb_release --short --codename)"}


# Optionally set the architecture to the host architecture if none set. Note
# that you can set your own default (i.e. ${ARCH:="i386"}).
: ${ARCH:="$(dpkg --print-architecture)"}

NAME="$DIST"
if [ -n "${ARCH}" ]; then
    NAME="$NAME-$ARCH"
    DEBOOTSTRAPOPTS=("--arch" "$ARCH" "${DEBOOTSTRAPOPTS[@]}")
fi
#BASETGZ="/var/cache/pbuilder/$NAME-base.tgz"
# Optionally, set BASEPATH (and not BASETGZ) if using cowbuilder
BASEPATH="<%= scope.lookupvar("debbuilder::setup::cows::cow_root") %>/base-${NAME}.cow/"
DISTRIBUTION="$DIST"
BUILDRESULT="/var/cache/pbuilder/${NAME}/result/"
APTCACHE="/var/cache/pbuilder/${NAME}/aptcache/"
APTCACHEHARDLINK=no
BUILDPLACE="/var/cache/pbuilder/build/"
#BINDMOUNTS="/var/cache/archive"

<% if @install_pl_keyring %>
# Add apt.puppetlabs.com keyrings
DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/puppetlabs-keyring.gpg")
APTKEYRINGS="/usr/share/keyrings/puppetlabs-keyring.gpg"
<% end %>

<% if @debootstrap_components %>
# Components to use while debootstrapping
DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--components=<%= @debootstrap_components %>")
<% end %>

if [ -n "${BUILDMIRROR}" ]; then
  OTHERMIRROR=$BUILDMIRROR
else
  <% if @other_mirror %>
  OTHERMIRROR="<%= @other_mirror %>"
  <% else %>
  # Only enable apt.puppetlabs.com repos if we have the main/dependencies repos available
  # this will only be the case on older platforms added in the pre-puppet4 era
  if $(echo ${OLD_SUITES[@]} | grep -q $DIST) ; then
    components="${components} main dependencies"
    if [ "${FOSS_DEVEL}" = 'true' ] ; then
      components="${components} devel"
    fi
    no_pl_apt_repo=($UNSTABLE_CODENAME "unstable" )
    if !(echo ${no_pl_apt_repo[@]} | grep -q $DIST) ; then
      OTHERMIRROR="deb http://apt.puppetlabs.com ${DIST} ${components}"
    fi
  fi
  <% end %>


  <% if scope.lookupvar("debbuilder::setup::cows::pe") %>
  if [ -n "${PE_VER}" ]; then
    <% unless @other_mirror %>
    OTHERMIRROR="deb http://enterprise.delivery.puppetlabs.net/${PE_VER}/repos/debian ${DIST} ${DIST}/main"
    <% end %>
    # Add internal signing key
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/pluto-build-keyring.gpg")
    APTKEYRINGS=("${APTKEYRINGS[@]}" "/usr/share/keyrings/pluto-build-keyring.gpg")
  fi
  <% end %>
fi

if $(echo ${DEBIAN_SUITES[@]} | grep -q $DIST); then
  # Debian configuration
  if $(echo ${DEBIAN_ARCHIVE_SUITES[@]} | grep -q $DIST); then
<% if @debian_archive_mirror %>
    MIRRORSITE="http://<%= @debian_archive_mirror %>"
<% else %>
    MIRRORSITE="http://$DEBIAN_ARCHIVE_MIRROR/debian/"
<% end %>
  else
<% if @debian_mirror %>
    MIRRORSITE="http://<%= @debian_mirror %>"
<% else %>
    MIRRORSITE="http://$DEBIAN_MIRROR/debian/"
<% end %>
  fi
<% if @debian_components %>
    COMPONENTS="<%= @debian_components %>"
<% else %>
    COMPONENTS="main contrib non-free"
<% end %>
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/debian-archive-keyring.gpg")
    # This is for enabling backports for the Debian stable suite.
    if $(echo "$STABLE_CODENAME stable" | grep -q $DIST); then
        EXTRAPACKAGES="$EXTRAPACKAGES"
        OTHERMIRROR="$OTHERMIRROR"
    fi
elif $(echo ${UBUNTU_SUITES[@]} | grep -q $DIST); then
    # Ubuntu configuration
<% if @ubuntu_mirror %>
    MIRRORSITE="http://<%= @ubuntu_mirror %>"
<% else %>
    MIRRORSITE="http://$UBUNTU_MIRROR/ubuntu/"
<% end %>
<% if @ubuntu_components %>
    COMPONENTS="<%= @ubuntu_components %>"
<% else %>
    COMPONENTS="main restricted universe multiverse"
<% end %>
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/ubuntu-archive-keyring.gpg")
    OTHERMIRROR="$OTHERMIRROR"
elif $(echo ${CUMULUS_SUITES[@]} | grep -q $DIST); then
    # Cumulus configuration
    MIRRORSITE="http://$CUMULUS_MIRROR/cumulus/"
    COMPONENTS="$CUMULUS_COMPONENTS"
    if [ -n "${PE_VER}" ]; then
        OTHERMIRROR="deb http://enterprise.delivery.puppetlabs.net/${PE_VER}/repos/debian ${DIST} ${DIST}/main"
    else
    # We need to unset $OTHERMIRROR here because we don't have public apt repos for CumulusLinux
        OTHERMIRROR=""
    fi

    # Add internal signing key for build tools repo
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/pluto-build-keyring.gpg")
    APTKEYRINGS=("${APTKEYRINGS[@]}" "/usr/share/keyrings/pluto-build-keyring.gpg")

    OTHERMIRROR="$OTHERMIRROR | deb http://enterprise.delivery.puppetlabs.net/build-tools/debian/CumulusLinux $DIST build-tools"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/cumuluslinux-2.2-keyring.gpg")
else
    echo "Unknown distribution: $DIST"
    exit 1
fi

<% if @debootstrap_keyring %>
DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=<%= @debootstrap_keyring %>")
<% end %>

# Workaround for http://bugs.debian.org/531885
umask 022
